Installation
============


Installation on Linux/UNIX
--------------------------

Note:
  A C compiler is required - knowledge of C is not!

The GNU C Compiler is fully supported, other compilers may work. The C compiler
should be in your ``$PATH`` (most likely the case). Note that some few Linux
distributions do not ship with a GCC compiler preinstalled - then you have to
install it.

Install Nimrod by downloading the appropriate ``.zip`` file and extracting it 
to a directory of your choice. The Nimrod Compiler will stay in this
directory (unless you copy it somewhere else). The compiler does not need 
write access to its directory anymore, so copying the nimrod folder to ``/opt`` 
does work.

Then run the following command::

  sh build.sh

Unlike other software, Nimrod does not distribute its files over the whole file
hierarchy. This has the advantage that you can deinstall it by just deleting
its folder. The disadvantage is that you have to add it to your ``PATH``
manually. An alternative is to create a symbolic link in ``/usr/bin``::

  [sudo] ln -s $your_install_dir/bin/nimrod  /usr/bin/nimrod


Installation on the Macintosh
-----------------------------

Only MacOS X is supported.
Since MacOS X is UNIX based too, it works like the installation on Linux. You
need to install Apple's developer's tools for the GNU Compiler Collection
though.


Installation on Windows
-----------------------

Install Nimrod by downloading and running
the ``nimrod_$version.exe`` file. As default, the ``LLVM-GCC`` 
compiler is used that is bundled with this installer. You can change
the configuration file to use another C compiler.

Currently, the following C compilers are supported under Windows:

- | Microsoft's Visual C++
  | http://msdn.microsoft.com/visualc
  | (You need the SDK too - but not the full one: Essential are only
    the win32api header files and import libraries.)
- | Gnu C Compiler (the mingw version; the cygwin version has not been tested!)
  | http://www.mingw.org/download.shtml
- | LLVM with GNU C/C++ frontend
  | http://llvm.org/releases/download.html#2.2
- | Digital Mars C++
  | http://www.digitalmars.com/download/freecompiler.html

For faster compile times I recommend Digital Mars C++ -- it is easy to install
and a small package.
