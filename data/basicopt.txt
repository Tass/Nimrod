Usage::
  nimrod command [options] inputfile [arguments]
Command::
  compile, c                compile project with default code generator (C)
  compile_to_c, cc          compile project with C code generator
  doc                       generate the documentation for inputfile
  rst2html                  converts a reStructuredText file to HTML
  rst2tex                   converts a reStructuredText file to TeX
Arguments:
  arguments are passed to the program being run (if --run option is selected)
Options:
  -p, --path:PATH           add path to search paths
  -o, --out:FILE            set the output filename
  -d, --define:SYMBOL       define a conditional symbol
  -u, --undef:SYMBOL        undefine a conditional symbol
  -f, --force_build         force rebuilding of all modules
  --symbol_files:on|off     use symbol files to speed up compilation (buggy!)
  --stack_trace:on|off      code generation for stack trace ON|OFF
  --line_trace:on|off       code generation for line trace ON|OFF
  --debugger:on|off         turn Embedded Nimrod Debugger ON|OFF
  -x, --checks:on|off       code generation for all runtime checks ON|OFF
  --obj_checks:on|off       code generation for obj conversion checks ON|OFF
  --field_checks:on|off     code generation for case variant fields ON|OFF
  --range_checks:on|off     code generation for range checks ON|OFF
  --bound_checks:on|off     code generation for bound checks ON|OFF
  --overflow_checks:on|off  code generation for over-/underflow checks ON|OFF
  -a, --assertions:on|off   code generation for assertions ON|OFF
  --dead_code_elim:on|off   whole program dead code elimination ON|OFF
  --opt:none|speed|size     optimize not at all or for speed|size
  --app:console|gui|lib     generate a console|GUI application|dynamic library
  -r, --run                 run the compiled program with given arguments
  --advanced                show advanced command line switches
  -h, --help                show this help
